{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/log-form/log-form.component.css","webpack:///./src/app/log-form/log-form.component.html","webpack:///./src/app/log-form/log-form.component.ts","webpack:///./src/app/log.service.ts","webpack:///./src/app/logs/logs.component.css","webpack:///./src/app/logs/logs.component.html","webpack:///./src/app/logs/logs.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-log-form></app-log-form>\\n  <app-logs></app-logs>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LogFormComponent } from './log-form/log-form.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { LogService } from './log.service';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card card-body\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" placeholder=\\\"Enter Your Log\\\" class=\\\"form-control\\\" name=\\\"text\\\" [(ngModel)]=\\\"text\\\">\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Add Log\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!this.text\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" [hidden]=\\\"!this.text\\\" (click)=\\\"clearState()\\\">Clear</button>\\n  </form> \\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport { log } from '../log';\nimport { LogService } from '../log.service';\n\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css']\n})\nexport class LogFormComponent implements OnInit {\n     id:string;\n     text:string;\n     date:any;\n     isNew:boolean=true;\n  constructor(private logservice:LogService) { }\n\n\n  ngOnInit() {\n    this.logservice.selectedLog.subscribe(log=>{\n          if(log.id!==null){\n            this.isNew=false;\n            this.id=log.id;\n            this.text=log.text;\n            this.date=log.date;\n          }\n    })\n  }\n\n  onSubmit(log:log){\n     //Check new log\n      if(this.isNew){\n        //create new log\n         const newlog={\n            id:this.generateId(),\n            text:this.text,\n            date:new Date()\n         }\n         this.logservice.addNewLog(newlog);\n      }\n      else{\n        //update log\n        const updlog={\n          id:this.id,\n          text:this.text,\n          date:new Date()\n        }\n        this.logservice.updateLog(updlog);\n      }\n    \n      //Clear the state\n      this.clearState();\n\n  }\n\n  clearState(){\n      this.isNew=true;\n      this.id=\"\";\n      this.text=\"\";\n      this.date=\"\";\n      this.logservice.clearState(); \n  }\n  generateId(){\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { log } from './log';\nimport { Observable, of, BehaviorSubject} from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  private logSourcee=new BehaviorSubject<log>({id:null,text:null,date:null});\n  selectedLog=this.logSourcee.asObservable();\n\n  private stateSource=new BehaviorSubject<boolean>(true);\n  stateClear=this.stateSource.asObservable();\n\n  logs:log[];\n  constructor() { \n   this.logs=[\n    //  {id:'1',text:\"First Log\",date:new Date()},\n    //  {id:'2',text:\"Second Log\",date:new Date()},\n    //  {id:'3',text:\"Third Log\",date:new Date()}\n   ]\n   \n  }\n  getLogs():Observable<log[]>{\n    this.logs=JSON.parse(localStorage.getItem('logs'));\n    return of(this.logs);\n  }\n  \n  setFormLog(log:log){\n      this.logSourcee.next(log);\n  }\n  \n  addNewLog(log){\n    this.logs.unshift(log);\n    //add to local storage\n      localStorage.setItem('logs', JSON.stringify(this.logs))\n    }\n\n   updateLog(log){\n      this.logs.forEach((cur,index)=>{\n           if(log.id==cur.id){\n             this.logs.splice(index,1);\n           }\n      })\n      this.logs.unshift(log); \n      //update to local storage\n      localStorage.setItem('logs', JSON.stringify(this.logs))\n   } \n\n   deleteLog(log:log){\n      this.logs.forEach((cur,index)=>{\n         if(log.id==cur.id){\n           this.logs.splice(index,1);\n         }\n      });\n      //delete from local storage\n   localStorage.setItem('logs', JSON.stringify(this.logs))\n   }\n\n    clearState(){\n      this.stateSource.next(true);\n    }\n   \n  }\n\n","module.exports = \".log-date{\\n     color:#777;\\n}\"","module.exports = \"<ul class=\\\"list-group\\\" *ngIf=\\\"logs.length>0\\\">\\n  <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\"\\n   *ngFor=\\\"let log of logs\\\" [class.list-group-item-secondary]=\\\"selectedLog === log\\\">\\n    <a href=\\\"#\\\" (click)=\\\"onSelect(log)\\\">{{ log.text }}</a>\\n    <span class=\\\"log-date\\\">{{ log.date | date:short}}</span>\\n    <i (click)=\\\"deleteLog(log)\\\" class=\\\"fa fa-remove\\\"></i>\\n  </li>\\n</ul>\\n\\n<h5 *ngIf=\\\"logs.length == 0\\\">No Logs to Show. Add new logs.</h5>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../log.service';\nimport { log } from '../log';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n  logs:log[];\n  selectedLog:log;\n  constructor(private logservice:LogService) { }\n\n  ngOnInit() { \n    this.logservice.stateClear.subscribe(clear=>\n    {\n      if(clear){\n        this.selectedLog={id:'',text:'',date:''}\n      }\n    }) \n    this.logservice.getLogs().subscribe(logs=>{\n      this.logs=logs;\n    })\n  }\n  \n  onSelect(log){\n      this.logservice.setFormLog(log);\n      this.selectedLog=log;\n  }\n\n  deleteLog(log){\n    if(confirm(\"Are you sure?\")){\n      this.logservice.deleteLog(log);\n    }\n    \n  }\n}\n\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"navbar-brand\\\">DevLogger</a>\\n  </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}